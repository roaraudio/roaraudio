                 RoarAudio
             As loud as a Lion
           ---------------------

--- 0. INDEX
0.  Index
1.  Infos for maintainers
2.  Infos for developer

--- 1. Infos for maintainers:

If you want to maintain a packet for your favorite OS please let me know!
I would love to be in contact with the maintainers to send them infos about
updates and maybe get feedback or things like init scripts or the like
(see 2. Infos for developer).

If it would make your work simpler I can put things in trunk
(info files for pkg build tools or the like). Just ask.

Also if you need any help you may contact me.

Here is my recommendation on how to split the RoarAudio in pkgs:

libroar               includes libroar, libroardsp, libroarmidi,
                      libroarlight and libroareio
roaraudio-common      include roard and roarclients
                      (at least the ones with no special deps)
roaraudio-tools       includes all other tools not in roaraudio-common
                      because of special deps (if any)
roaraudio-compat      includes libroaresd, libroararts, libroarpulse
                      and libroaryiff. It would be nice to ask the user
                      if he wants symlinks from libesd, libarts*, libpulse*.
roaraudio-dev         includes include/
someplayer-roar       pkgs from plugins/

manpages should be included in the corresponding packet.

If your system includes a libdnet (Linux DECnet support) please build
it with DECnet support compiled in. There will be no strange warning messages
anymore with DECnet enabled on a non-DECnet system. libdnet does not
require any Kernel modules or has any non standard deps itself.

If you system includes libslp (normaly one of the deps of cups) please
consider to build with libslp support.

In addition you should configure with --runtime-detect: this will
let roard/libroar detect the presents of some tools at runtime and
will reduce deps.

Please ensure that configure finds the correct audio users group.
In case it does not detect the correct one please set it via
--audio-group.

In case you want to provide emulation of other sound systems
they need to be install on the build system (only). This is
because we use parts of them (mainly header files) in order
to build the compatibility librarys and abstraction layers
to ensure best comaptibility. They will not be required
after the build has been done and thereof does not need to be a
dependency of the final packet you build.
The only expection is in case you build driver support for
one or more of them. If you do so you of cause need to ensure
that all needed librarys are avalible on the target system.

Running roard:
Global (system wide) roards normaly are started as root.
Ensure it drops it's privilegs by setting --setuid/--setgid
and maybe -U and -G.

It is allways nice to use --pidfile. If you use a pidfile
you can start and stop roard by using --start and --stop easily.

You can use --chroot to chroot into an empty directory to improve security.
roard does the chrooting after loading everything so it is perfectly safe
to chroot into an empty directory. In case your system includes a /var/empty
or simular directory please do the chroot.

To ensure no drops consider to add one or two --realtime

In case of a public (for LAN) server have some way for the user to set --location
and use --slp for Zero Conf.

For more information see roard --help.

--- 2. Infos for developer

At the moment all the libs are under GPLv3.
As libesd, libarts*, libpulse* and maybe other are under
LGPL the corresponding roar replacements should be under LGPL as well.
Because they link libroar independent of what licenses they are under
they are downgraded to GPL. This may change in future.

Because of that I *require* that *everything* that is contributed by
someone I get under LGPL so I can upgrade code to LGPL if needed
in future without asking. Code I get under a different license
will *NOT* get into trunk nor will be hosted by me.

Also add full contact infos when sending code to me, this includes:
1) Full name
2) nickname
3) E-Mail
4) OpenPGP key

When sending code please sign it with OpenPGP.


#ll
