#ckport(1) database for RoarAudio core librarys:
!NAME: RoarAudio core librarys
!TYPE: func

!TARGET: libroar0
# Unsorted misc:
roar_cdrom_run_cdparanoia	unknown
roar_vio_open_get_cookie	unknown
_ROAR_MLOCK			internal
_roardl2ldl			internal

# VIO:
roar_vio_close			ok

roar_vio_read			ok
roar_vio_write			ok

roar_vio_lseek			ok

roar_vio_sync			ok
roar_vio_nonblock		ok
roar_vio_ctl			ok

roar_vio_accept			ok
roar_vio_shutdown		ok

roar_vio_select			ok

# VIO String functions:
roar_vio_fgets			ok
roar_vio_getc			ok
roar_vio_printf			ok
roar_vio_putc			ok

# VIO other ops:
roar_vio_copy_data		ok
roar_vio_open_tee		wip	Does not yet work
roar_vio_open_split		wip	Does not yet work

# VIO Open functions:
# very basic:
roar_vio_open_pass		ok
roar_vio_open_re		ok

# basic:
roar_vio_open_fh		maybe
roar_vio_open_file		maybe

# network:
roar_vio_open_fh_socket		maybe
roar_vio_open_socket		ok
roar_vio_open_socket_listen	ok

# stdio:
roar_vio_open_stdio		maybe	Not supported by all archs
roar_vio_to_stdio		maybe	Not supported by all archs

roar_vio_stdio_read		internal
roar_vio_stdio_write		internal
roar_vio_stdio_lseek		internal
roar_vio_stdio_sync		internal
roar_vio_stdio_ctl		internal
roar_vio_stdio_close		internal

roar_vio_to_stdio_close		internal
roar_vio_to_stdio_write		internal
roar_vio_to_stdio_read		internal

# VIO based streams:
roar_vio_simple_stream		ok
roar_vio_simple_new_stream_obj	ok

# VIO internals:
roar_vio_init_calls	internal
roar_vio_set_inst	internal
roar_vio_set_fh		legacy
roar_vio_get_fh		legacy

roar_vio_basic_read	internal
roar_vio_basic_write	internal
roar_vio_basic_lseek	internal
roar_vio_basic_nonblock	internal
roar_vio_basic_sync	internal
roar_vio_basic_ctl	internal
roar_vio_basic_close	internal

roar_vio_null_rw	internal
roar_vio_null_sync	internal

roar_vio_pass_read	internal
roar_vio_pass_write	internal
roar_vio_pass_lseek	internal
roar_vio_pass_nonblock	internal
roar_vio_pass_sync	internal
roar_vio_pass_ctl	internal
roar_vio_pass_close	internal

roar_vio_re_read	internal
roar_vio_re_write	internal
roar_vio_re_lseek	internal

# VIO for Winsock:
roar_vio_winsock_read	internal
roar_vio_winsock_write	internal
roar_vio_winsock_nonblock	internal
roar_vio_winsock_sync	internal
roar_vio_winsock_ctl	internal
roar_vio_winsock_close	internal

# VIO OpenSSL BIO:
roar_vio_open_bio	maybe	requires OpenSSL support to be compiled in
roar_vio_to_bio		maybe	requires OpenSSL support to be compiled in

roar_vio_bio_read	internal
roar_vio_bio_write	internal
roar_vio_bio_lseek	internal
roar_vio_bio_nonblock	internal
roar_vio_bio_sync	internal
roar_vio_bio_close	internal

# VIO buffer:
roar_vio_open_buffer		wip
roar_vio_buffer_read		internal
roar_vio_buffer_write		internal
roar_vio_buffer_lseek		internal
roar_vio_buffer_nonblock	internal
roar_vio_buffer_sync		internal
roar_vio_buffer_ctl		internal
roar_vio_buffer_close		internal

# VIO Buffer Store:
roar_vio_open_buffer_store	wip
roar_vio_buffer_store_read	internel
roar_vio_buffer_store_write	internal
roar_vio_buffer_store_lseek	internal
roar_vio_buffer_store_nonblock	internal
roar_vio_buffer_store_sync	internal
roar_vio_buffer_store_ctl	internal
roar_vio_buffer_store_close	internal

# VIO Commands:
roar_vio_open_cmd		likely	This requires forking processes
roar_vio_cmd_close		internal
roar_vio_cmd_fork		internal
roar_vio_cmd_wait		internal

roar_vio_open_2popen		likely	This requires forking processes
roar_vio_2popen_close		internal

roar_vio_cmd_read		internal
roar_vio_cmd_write		internal
roar_vio_cmd_nonblock		internal
roar_vio_cmd_sync		internal
roar_vio_cmd_ctl		internal

roar_vio_open_gzip		wip	Currently requires cmd vio
roar_vio_open_gpg		wip	Currently requires cmd vio
roar_vio_open_pgp_decrypt	wip	Currently requires cmd vio
roar_vio_open_pgp_store		wip	Currently requires cmd vio
roar_vio_open_pgp_encrypt_sym	wip	Currently requires cmd vio
roar_vio_open_pgp_encrypt_pub	wip	Currently requires cmd vio

# VIO DSTR:
roar_vio_dstr_get_type		ok
roar_vio_dstr_get_name		ok
roar_vio_dstr_register_type	wip

roar_vio_dstr_init_defaults	ok
roar_vio_dstr_init_defaults_c	ok

roar_vio_open_default		ok

roar_vio_open_dstr		ok
roar_vio_open_dstr_vio		ok

roar_vio_dstr_parse_opts	internal
roar_vio_dstr_set_defaults	internal
roar_vio_dstr_build_chain	internal

_roar_vio_dstr_init_otherlibs	internal
roar_vio_dstr_get_by_type	internal

# VIO Jumbo (frames):
roar_vio_open_jumbo		ok

roar_vio_jumbo_read		internal
roar_vio_jumbo_write		internal
roar_vio_jumbo_lseek		internal
roar_vio_jumbo_nonblock		internal
roar_vio_jumbo_sync		internal
roar_vio_jumbo_ctl		internal
roar_vio_jumbo_close		internal

# VIO Magic:
roar_vio_open_magic		wip	Does not yet work
roar_vio_magic_read		internal
roar_vio_magic_write		internal
roar_vio_magic_lseek		internal
roar_vio_magic_nonblock		internal
roar_vio_magic_sync		internal
roar_vio_magic_close		internal

# VIO pipe:
roar_vio_open_pipe		wip	No support for buffer based pipes
roar_vio_pipe_init		internal

roar_vio_pipe_read		internal
roar_vio_pipe_write		internal
roar_vio_pipe_nonblock		internal
roar_vio_pipe_sync		internal
roar_vio_pipe_ctl		internal
roar_vio_pipe_close		internal

# VIO proto:
roar_vio_proto_init_def		internal

roar_vio_open_proto		likely	use DSTR interface

roar_vio_proto_read		internal
roar_vio_proto_write		internal
roar_vio_proto_lseek		internal
roar_vio_proto_nonblock		internal
roar_vio_proto_sync		internal
roar_vio_proto_ctl		internal
roar_vio_proto_close		internal

roar_vio_open_proto_http	internal
roar_vio_open_proto_gopher	internal

# VIO RTP:
roar_vio_open_rtp		wip	Does not always work correctly
roar_vio_rtp_read		internal
roar_vio_rtp_write		internal
roar_vio_rtp_lseek		internal
roar_vio_rtp_nonblock		internal
roar_vio_rtp_sync		internal
roar_vio_rtp_ctl		internal
roar_vio_rtp_close		internal

# VIO Socket:
roar_vio_open_def_socket	internal	use DSTR interface
roar_vio_socket_init_socket_def	internal
roar_vio_socket_init_dstr_def	internal

roar_vio_socket_conv_def	internal

roar_vio_socket_get_port	internal

roar_vio_socket_init_unix_def		internal

roar_vio_socket_init_decnetnode_def	internal
roar_vio_socket_init_decnet_def		internal

roar_vio_socket_init_inet4host_def	internal
roar_vio_socket_init_inet4_def		internal
roar_vio_socket_init_tcp4_def		internal
roar_vio_socket_init_udp4_def		internal
roar_vio_socket_init_inet6host_def	internal
roar_vio_socket_init_inet6_def		internal
roar_vio_socket_init_tcp6_def		internal
roar_vio_socket_init_udp6_def		internal

# VIO Stack:
roar_vio_open_stack		ok
roar_vio_stack_add		ok

roar_vio_stack_read		internal
roar_vio_stack_write		internal
roar_vio_stack_lseek		internal
roar_vio_stack_nonblock		internal
roar_vio_stack_sync		internal
roar_vio_stack_ctl		internal
roar_vio_stack_close		internal

# VIO Tantalos:
roar_vio_open_tantalos		ok


# Buffer:
roar_buffer_add			ok
roar_buffer_delete		ok
roar_buffer_duplicate		ok
roar_buffer_free		ok
roar_buffer_get_data		ok
roar_buffer_get_flag		ok
roar_buffer_get_len		ok
roar_buffer_get_meta		ok
roar_buffer_get_meta_i32	ok
roar_buffer_get_next		ok
roar_buffer_new			ok
roar_buffer_new_data		ok
roar_buffer_new_no_ma		ok
roar_buffer_ring_new		ok
roar_buffer_ring_read		ok
roar_buffer_ring_stats		ok
roar_buffer_ring_write		ok
roar_buffer_set_flag		ok
roar_buffer_set_len		ok
roar_buffer_set_meta		ok
roar_buffer_set_meta_i32	ok
roar_buffer_set_offset		ok
roar_buffer_shift_out		ok

# Some internal functions:
roar_debug_msg			internal
roar_debug_message_print	internal
roar_debug_audio_info_print	internal

# Connection handling:
roar_connect_raw		internal
roar_connect			ok
roar_connect_fh			likely
roar_get_connection_fh		critical
roar_get_connection_vio		legacy	use roar_get_connection_vio2
roar_get_connection_vio2	ok
roar_disconnect			ok
roar_set_connection_callback	wip
roar_sync			ok
roar_wait_msg			wip
roar_noop			ok
roar_identify			internal

# Messages:
roar_send_message		likely	This is for internal use mostly
roar_recv_message		likely	This is for internal use mostly
roar_req			likely	This is for internal use mostly
roar_vsend_message		likely	This is for internal use mostly
roar_vrecv_message		likely	This is for internal use mostly
roar_vreq			likely	This is for internal use mostly

# Client handling:
roar_client_new			ok
roar_client_set_fh		maybe	Using FHs directly may not work on all systems
roar_client_set_proto		ok
roar_client_pass		ok

# Streams:
roar_stream_connect		ok
roar_stream_new			ok
roar_stream_set_rel_id		ok
roar_stream_get_rel_id		ok
roar_stream_new_by_id		ok
roar_stream_new_empty		ok
roar_stream_set_id		ok
roar_stream_get_id		ok
roar_stream_set_fh		likely
roar_stream_get_fh		likely
roar_stream_set_dir		ok
roar_stream_get_dir		ok

roar_stream_exec		ok
roar_stream_connect_to		maybe
roar_stream_connect_to_ask	internal
roar_stream_passfh		maybe	Does not work on all systems

roar_stream_attach_simple	ok
roar_stream_add_data		likely	does not work most of the time

roar_stream_send_data		critical	does not work as exected

roar_stream_get_info		ok
roar_stream_get_name		ok

roar_stream_get_chanmap		wip
roar_stream_set_chanmap		wip

roar_stream_set_flags		ok
roar_stream_set_role		ok

roar_stream_s2m			likely	mostly for internal use only
roar_stream_m2s			likely	mostly for internal use only

# Accessing name database:
roar_dir2str			ok
roar_str2dir			ok
roar_str2codec			ok
roar_codec2str			ok
roar_streamstate2str		ok
roar_str2role			ok
roar_role2str			ok
roar_str2proto			ok
roar_proto2str			ok
roar_str2byteorder		ok
roar_byteorder2str		ok
roar_str2autht			ok
roar_autht2str			ok
roar_meta_strtype		ok
roar_meta_inttype		ok
roar_meta_strgenre		ok
roar_meta_intgenre		ok

# Audio info:
roar_info2samplesize		ok
roar_info2framesize		ok
roar_info2bitspersec		ok

roar_profile2info		ok
roar_profiles_list		ok

# Config:
roar_libroar_set_server		ok
roar_libroar_get_server		ok
roar_libroar_nowarn		internal
roar_libroar_warn		internal
roar_libroar_get_config_ptr	fail
roar_libroar_get_config		internal
roar_libroar_config_codec_get_conf	internal
roar_libroar_config_codec_get	internal
roar_libroar_config_parse	likely	Why do you want to parse additional config?

# Controling the server:
roar_get_clientid		ok
roar_get_standby		ok
roar_set_standby		ok
roar_exit			legacy	use roar_terminate
roar_terminate			ok
roar_server_oinfo		legacy	depends on mixer

roar_list			ok

roar_get_client			ok
roar_get_stream			ok

roar_kick			ok

roar_set_vol			ok
roar_get_vol			ok

roar_ctl_f2m			internal
roar_ctl_m2f			internal

roar_ctl_ia2m			internal
roar_ctl_m2ia			internal

roar_ctl_c2m			likely	mostly for internal use only
roar_ctl_m2c			likely	mostly for internal use only

# Env:
roar_env_set			ok
roar_env_get_home		likely	use roar_env_get_home_r
roar_env_get_home_r		ok
roar_env_render_path_r		maybe	Why do you want to use this?

# File handlung:
roar_file_codecdetect		ok
roar_file_send_raw		legacy	use roar_vio_copy_data
roar_file_play			ok
roar_file_play_full		ok
roar_file_map			likely	not supported on all systems
roar_file_unmap			likely	not supported on all systems

roar_cdromdevice		maybe

# KeyVal:
roar_keyval_lookup		ok
roar_keyval_split		ok

# ACL:
roar_acl_rule_chk_connect	wip

# Auth:
roar_auth			wip

# Beep:
roar_beep			ok

# CDRum / CDDA:
roar_cdrom_open			wip
roar_cdrom_close		wip
roar_cdrom_stop			wip
roar_cdrom_play			wip

# Debug:
roar_debug_warn_sysio_real	internal
roar_debug_warn_obsolete_real	internal

roar_debug_set_stderr_fh	likely	use roar_debug_set_stderr_vio
roar_debug_set_stderr_vio	ok
roar_debug_set_stderr_mode	ok

roar_debug_get_stderr		ok

roar_debug_msg_simple		legacy
roar_debug_msg			ok

# Error handling:
roar_err_int			wip
roar_err_buildmsg		wip
roar_err_parsemsg		wip

roar_err_to_errno		maybe	This function should be avoided outside of libroar*
roar_err_from_errno		maybe	This function should be avoided outside of libroar*
roar_err_clear			maybe	This function should be avoided outside of libroar*


# MemMgr:
roar_mm_calloc			wip
roar_mm_malloc			wip
roar_mm_free			wip
roar_mm_realloc			wip
roar_mm_strdup			wip

# Meta Data:
roar_stream_meta_set		ok
roar_stream_meta_get		ok
roar_stream_meta_list		ok
roar_meta_free			ok
roar_meta_parse_audioinfo	ok

# NNode:
roar_nnode_new			ok
roar_nnode_new_from_af		ok
roar_nnode_new_from_sockaddr	maybe	not supported on all systems
roar_nnode_new_from_fh		likely	not supported on all systems

roar_nnode_free			ok

roar_nnode_get_socktype		ok
roar_nnode_to_str		ok
roar_nnode_from_blob		internal	mostly for internal use
roar_nnode_to_blob		internal	mostly for internal use
roar_nnode_cmp			ok

# Password API:
roar_pinentry_open		internal
roar_pinentry_simple_open	internal
roar_pinentry_close		internal
roar_pinentry_send		internal
roar_pinentry_recv		internal
roar_pinentry_req		internal
roar_pinentry_set_desc		internal
roar_pinentry_set_prompt	internal
roar_pinentry_set_yes		internal
roar_pinentry_set_no		internal
roar_pinentry_set		internal
roar_pinentry_getpin		internal
roar_pinentry_confirm		internal

roar_sshaskpass_getpass		internal

# RoarDL:
roar_dl_open			ok
roar_dl_close			ok
roar_dl_getsym			ok
roar_dl_ra_init			ok
roar_dl_errstr			ok

# RoarSLP:
roar_slp_url_callback		internal
roar_slp_search			internal
roar_slp_cookie_init		internal
# Those may be more public in futur:
roar_slp_find_roard		internal
roar_slp_find_roard_r		internal

# RoarX11:
roar_x11_connect		ok
roar_x11_connect_display	maybe	not supported on all systems
roar_x11_disconnect		ok
roar_x11_flush			ok
roar_x11_set_prop		ok
roar_x11_delete_prop		ok
roar_x11_get_prop		ok

# (old) Simple API:
roar_simple_connect		ok

roar_simple_stream		legacy	use VIO based streams
roar_simple_stream_obj		legacy	use VIO based streams
roar_simple_new_stream_attachexeced_obj	internal

roar_simple_new_stream		legacy
roar_simple_new_stream_obj	legacy

roar_simple_play_file		ok

roar_simple_play		legacy
roar_simple_monitor		legacy
roar_simple_record		legacy
roar_simple_filter		legacy

roar_simple_connect_virtual	ok

roar_simple_close		legacy	use roar_vio_close

roar_simple_get_standby		legacy	use roar_get_standby

# (old) Socket API:
roar_socket_listen		legacy	use roar_vio_open_socket_listen
roar_socket_connect		legacy	use roar_vio_open_socket

roar_socket_new_tcp		internal
roar_socket_new_udp		internal
roar_socket_new_tcp6		internal
roar_socket_new_udp6		internal
roar_socket_new_unix		internal
roar_socket_new_decnet_seqpacket	internal
roar_socket_new_decnet_stream	internal
roar_socket_new_ipxspx		internal
roar_socket_new_ipx		internal

roar_socket_open		legacy	use roar_vio_open_socket or roar_vio_open_socket_listen
roar_socket_open_fork		internal
roar_socket_open_file		internal
roar_socket_open_proxy		internal
roar_socket_listen_decnet	internal
roar_socket_get_local_nodename	internal
roar_socket_nonblock		internal	use roar_vio_nonblock
roar_socket_decnet_set_timeout	internal
roar_socket_recvbuf		internal
roar_socket_dup_udp_local_end	internal

roar_socket_send_fh		internal
roar_socket_recv_fh		internal

roar_socket_open_socks4		internal
roar_socket_open_socks4a	internal
roar_socket_open_socks4d	internal
roar_socket_open_socks4x	internal

roar_socket_open_http		internal
roar_socket_open_ssh		internal

# Stack:
roar_stack_new			ok
roar_stack_newalloc		ok
roar_stack_free			ok
roar_stack_set_free		ok
roar_stack_set_flag		ok
roar_stack_push			ok
roar_stack_pop			ok
roar_stack_get_cur		ok

# VS:
roar_vs_new			ok
roar_vs_volume			internal
roar_vs_pause			ok
roar_vs_read			ok
roar_vs_stream_obj		maybe
roar_vs_vio_obj			maybe
roar_vs_close			ok
roar_vs_blocking		ok
roar_vs_new_from_con		maybe
roar_vs_sync			wip
roar_vs_volume_get		ok
roar_vs_stream			ok
roar_vs_mute			ok
roar_vs_volume_mono		ok
roar_vs_new_simple		ok
roar_vs_latency			wip
roar_vs_init			internal
roar_vs_strerr			ok
roar_vs_write			ok
roar_vs_flag			internal
roar_vs_meta			ok
roar_vs_connection_obj		maybe
roar_vs_volume_stereo		ok


!TARGET: libroardsp0
# amp.h:
roar_amp_pcm			ok
roar_amp_pcm_8bit		internal
roar_amp_pcm_16bit		internal
roar_amp_pcm_24bit		internal
roar_amp_pcm_32bit		internal

# channels.h:
roardsp_chan2str		ok
roardsp_str2chan		ok

roardsp_chanlist2str		ok

roardsp_chanlist_init		wip
roardsp_chanmap_calc		wip

roardsp_chanmap_mappcm8		wip
roardsp_chanmap_mappcm16	wip
roardsp_chanmap_mappcm24	wip
roardsp_chanmap_mappcm32	wip
roardsp_chanmap_mappcm		wip

# convert.h:
roar_conv_bits			ok

roar_conv_bits_8to16		internal
roar_conv_bits_8to24		internal
roar_conv_bits_8to32		internal
roar_conv_bits_16to8		internal
roar_conv_bits_16to24		internal
roar_conv_bits_16to32		internal
roar_conv_bits_24to8		internal
roar_conv_bits_24to16		internal
roar_conv_bits_24to32		internal
roar_conv_bits_32to8		internal
roar_conv_bits_32to16		internal
roar_conv_bits_32to24		internal

roar_conv_chans			legacy

roar_conv_chans_1ton8		internal
roar_conv_chans_1ton16		internal
roar_conv_chans_1to28		internal
roar_conv_chans_1to216		internal
roar_conv_chans_nto18		internal
roar_conv_chans_nto116		internal
roar_conv_chans_2to18		internal
roar_conv_chans_2to116		internal
roar_conv_chans_2to38		internal
roar_conv_chans_2to316		internal
roar_conv_chans_2to48		internal
roar_conv_chans_2to416		internal
roar_conv_chans_2to58		internal
roar_conv_chans_2to516		internal
roar_conv_chans_2to68		internal
roar_conv_chans_2to616		internal

roar_conv_chans_3to28		internal
roar_conv_chans_3to216		internal
roar_conv_chans_4to28		internal
roar_conv_chans_4to216		internal
roar_conv_chans_5to28		internal
roar_conv_chans_5to216		internal
roar_conv_chans_6to28		internal
roar_conv_chans_6to216		internal

roar_conv_rate			broken
roar_conv_rate_8		internal
roar_conv_rate_16		internal
roar_conv_rate_161zoh		internal
roar_conv_rate_162zoh		internal
roar_conv_rate_16nzoh		internal
roar_conv_rate_SRC		internal

roar_conv_rate2			ok
roar_conv_poly3_32		internal
roar_conv_poly3_16		internal
roar_conv_poly3_8		internal

roar_conv_codec			ok

roar_conv_signedness		internal
roar_conv_codec_s2u8		internal
roar_conv_codec_s2u16		internal
roar_conv_codec_s2u32		internal
roar_conv_codec_u2s8		internal
roar_conv_codec_u2s16		internal
roar_conv_codec_u2s32		internal

roar_conv_endian		ok

roar_conv_endian_16		internal
roar_conv_endian_24		internal
roar_conv_endian_32		internal

roar_conv			legacy	broken in very bad way
roar_conv2			ok

roar_conv_poly4_16		internal
roar_conv_poly4_16s		internal

# fader.h:
roar_fader_init			ok
roar_fader_set_rate		ok
roar_fader_set_startstop	ok
roar_fader_has_started		ok
roar_fader_has_ended		ok

roar_fader_calcpcm_i16n		ok

roar_fader_calcpcm_i161		internal

# filter.h:
roardsp_filter_str2id		ok
roardsp_filter_id2str		ok

roardsp_filter_new		ok
roardsp_filter_init		ok
roardsp_filter_uninit		ok
roardsp_filter_calc		ok
roardsp_filter_ctl		ok
roardsp_filter_reset		ok

roardsp_lowp_init		internal
roardsp_lowp_uninit		internal
roardsp_lowp_calc16		internal
roardsp_lowp_ctl		internal
roardsp_lowp_reset		internal

roardsp_highp_init		internal
roardsp_highp_uninit		internal
roardsp_highp_calc16		internal
roardsp_highp_ctl		internal
roardsp_highp_reset		internal

roardsp_amp_init		internal
roardsp_amp_uninit		internal
roardsp_amp_calc16		internal
roardsp_amp_calc8		internal
roardsp_amp_ctl			internal
roardsp_amp_reset		internal

roardsp_add_init		internal
roardsp_add_calc16		internal
roardsp_add_reset		internal

roardsp_quantify_init		internal
roardsp_quantify_uninit		internal
roardsp_quantify_calc16		internal
roardsp_quantify_ctl		internal
roardsp_quantify_reset		internal

roardsp_clip_calc16		internal
roardsp_clip_ctl		internal
roardsp_clip_reset		internal

roardsp_downmix_init		internal
roardsp_downmix_calc162		internal
roardsp_downmix_ctl		internal
roardsp_downmix_reset		internal

roardsp_dcblock_init		internal
roardsp_dcblock_uninit		internal
roardsp_dcblock_calc16		internal
roardsp_dcblock_reset		internal

roardsp_swap_init		internal
roardsp_swap_uninit		internal
roardsp_swap_calc162		internal
roardsp_swap_ctl		internal
roardsp_swap_reset		internal

roardsp_agc_init		internal
roardsp_agc_uninit		internal
roardsp_agc_ctl			internal
roardsp_agc_reset		internal

roardsp_speex_prep_init		internal
roardsp_speex_prep_uninit	internal
roardsp_speex_prep_calc161	internal
roardsp_speex_prep_ctl		internal
roardsp_speex_prep_reset	internal

# filterchain.h:
roardsp_fchain_init		ok
roardsp_fchain_uninit		ok
roardsp_fchain_add		ok
roardsp_fchain_calc		ok
roardsp_fchain_reset		ok
roardsp_fchain_num		ok

# interleave.h:
roar_interl_init		ok
roar_interl_uninit		ok
roar_interl_ctl			ok

roar_interl_encode_ext		ok
roar_interl_decode_ext		ok

# libroardsp.h:
# why are those prototypes still here?
roardsp_conv_alaw2pcm16		likely	use roar_xcoder_*
roardsp_conv_pcm162alaw		likely	use roar_xcoder_*
roardsp_conv_mulaw2pcm16	likely	use roar_xcoder_*
roardsp_conv_pcm162mulaw	likely	use roar_xcoder_*
provide_buffer			internal

# midi.h:
# why isn't this in libroarmidi?:
roar_midi_note2name		ok
roar_midi_name2note		ok
roar_midi_midi2note		ok
roar_midi_note2freq		ok

roar_midi_note_from_midiid	ok

roar_midi_find_octave		ok
roar_midi_add_octave		ok
roar_midi_notefill		ok

roar_midi_gen_tone		legacy	use roar_synth_*

roar_midi_play_note		legacy	use roar_synth_*

roar_midi_basic_init		legacy	use roar_synth_*
roar_midi_basic_play		legacy	use roar_synth_*

# midside.h:
# where is the public part of this API?:
roar_conv_s2ms_8		internal
roar_conv_s2ms_16		internal
roar_conv_s2ms_32		internal
roar_conv_ms2s_8		internal
roar_conv_ms2s_16		internal
roar_conv_ms2s_32		internal

# mixer.h:
roar_mix_pcm			ok
roar_mix_pcm_8bit		internal
roar_mix_pcm_16bit		internal
roar_mix_pcm_24bit		internal
roar_mix_pcm_32bit		internal

# point.h:
# this file contains no function prototypes.

# poly.h (was math.h long ago):
roar_math_mkpoly		ok

# we allow this public because this part is speed relevant:
roar_math_mkpoly_2x2		ok
roar_math_mkpoly_3x3		ok
roar_math_mkpoly_4x4		ok
roar_math_mkpoly_5x5		wip

roar_math_cvpoly		ok
roar_math_cvpoly_4x4		ok

# remove.h:
roar_remove_init		ok
roar_remove			ok

roar_remove_8			internal
roar_remove_16			internal
roar_remove_32			internal

roar_remove_so			ok

roar_remove_so8			internal
roar_remove_so16		internal
roar_remove_so32		internal

# rms.h:
# why do we not have a roar_rms2_1_X_Y()?

roar_rms2_1_8			ok
roar_rms2_1_16			ok
roar_rms2_1_32			ok

roar_rms2_1_8_2			ok
roar_rms2_1_16_2		ok
roar_rms2_1_32_2		ok

roar_rms2_1_8_n			ok
roar_rms2_1_16_n		ok
roar_rms2_1_32_n		ok

# synth.h:
roar_synth_init			ok
roar_synth_set_offset		ok
roar_synth_set_func		ok
roar_synth_set_volume		ok

roar_synth_pcmout_i16n		ok
roar_synth_pcmout_i161		internal

roar_synth_synf_rect		fail	you must not call this function directly
roar_synth_synf_saw		fail	you must not call this function directly
roar_synth_synf_tri		fail	you must not call this function directly
roar_synth_synf_trap		fail	you must not call this function directly
roar_synth_synf_s2s		fail	you must not call this function directly

# transcode.h:
roar_xcoder_init		ok
roar_xcoder_set_backend		likely	you should provide backend directly using roar_xcoder_init
roar_xcoder_packet_size		maybe
roar_xcoder_close		ok
roar_xcoder_proc_header		ok
roar_xcoder_proc_packet		ok
roar_xcoder_proc		ok

roar_bixcoder_init		ok
roar_bixcoder_packet_size	ok
roar_bixcoder_close		ok
roar_bixcoder_read_header	ok
roar_bixcoder_read_packet	ok
roar_bixcoder_read		ok
roar_bixcoder_write_header	ok
roar_bixcoder_write_packet	ok
roar_bixcoder_write		ok

roar_xcoder_dummy_inituninit	internal
roar_xcoder_dummy_packet_size_any	internal
roar_xcoder_dummy_proc_header	internal

roar_xcoder_alaw_encode		internal
roar_xcoder_alaw_decode		internal
roar_xcoder_mulaw_encode	internal
roar_xcoder_mulaw_decode	internal

# transcode_celt.h:
roar_xcoder_celt_init		internal
roar_xcoder_celt_uninit		internal
roar_xcoder_celt_packet_size	internal
roar_xcoder_celt_encode		internal
roar_xcoder_celt_decode		internal

# transocde_speex.h:
roar_xcoder_speex_init		internal
roar_xcoder_speex_uninit	internal
roar_xcoder_speex_packet_size	internal
roar_xcoder_speex_proc_header	internal
roar_xcoder_speex_encode	internal
roar_xcoder_speex_decode	internal

# vio_transcode.h:

roar_vio_open_xcode		ok
roar_vio_xcode_proc		internal
roar_vio_xcode_lseek		internal
roar_vio_xcode_nonblock		internal
roar_vio_xcode_sync		internal
roar_vio_xcode_ctl		internal
roar_vio_xcode_close		internal

roar_vio_open_bixcode		ok
roar_vio_bixcode_read		internal
roar_vio_bixcode_write		internal
roar_vio_bixcode_lseek		internal
roar_vio_bixcode_nonblock	internal
roar_vio_bixcode_sync		internal
roar_vio_bixcode_ctl		internal
roar_vio_bixcode_close		internal

!TARGET: libroareio0
# driver.h:
roar_cdriver_open		ok
roar_cdriver_oss		internal
roar_cdriver_roar		internal
roar_cdriver_null		internal

# ff_ssdp.h:
roar_ff_ssdp_init		ok
roar_ff_ssdp_free		ok
roar_ff_ssdp_write		ok
roar_ff_ssdp_read		ok

# httpd.h:
roar_http_new			ok
roar_http_free			ok
roar_http_update		ok

# libroareio.h:
# no function prototypes in this file.

!TARGET: libroarlight0

# colors.h:
roar_color_new			ok
roar_color_new_gray		maybe	has only 8 bit support
roar_color_new_rgb		maybe	has only 24bit (8 bit per channel) RGB support

roar_color_copy			ok
roar_color_conv			wip

roar_color_conv_gray		internal
roar_color_conv_rgb		internal

roar_color_to_string		ok

roar_color_to_blob		fail	not yet implemented
roar_color_from_blob		fail	not yet implemented

# laser.h:
# no function prototypes in this file.

# pwm.h:
roar_light_pwm_new		ok
roar_light_pwm_set		ok
roar_light_pwm_send		ok

# roardmx.h:
roar_roardmx_message_new	likely	This may not what you want, use roar_roardmx_message_new_*

roar_roardmx_message_set_type	likely
roar_roardmx_message_get_flag	maybe
roar_roardmx_message_get_type	maybe
roar_roardmx_message_get_len	maybe

roar_roardmx_message_send	ok
roar_roardmx_message_recv	ok

roar_roardmx_message_new_sset		ok
roar_roardmx_message_add_chanval	ok
roar_roardmx_message_get_chanval	ok
roar_roardmx_message_numchannels	ok

!TARGET: libroarmidi0
# libroarmidi.h:
# no function prototypes in this file.


#ll
